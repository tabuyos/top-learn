单例模式
    有实例化的过程， 有返回对象
    多个线程操作不同实例对象， 多个线程要操作同一对象， 要保证对象的统一性
    饿汉式：
        thread safe problem:
            只能实例化一次， 在旧爱在的时候， 因此是线程安全的
            去了解JVM的classloader原理
        懒加载： 就是延迟加载， 因此饿汉式不是懒加载， 长时间不使用， 影响部分的性能
        性能比较好， 因为不是懒加载
    懒汉式：
        thread safe problem:
            不能保证实例对象的唯一性， 因此存在线程的问题
        是懒加载
        性能好
    懒汉式+同步方法
        线程安全
        懒加载
        性能： 使用了synchronized， 基本上是退化为串行方式了， 因此性能不好
    懒汉式+同步代码块
        懒加载
        性能比较好
        线程不安全
    DCL
        性能比较好
        懒加载
        线程安全
        但是因为指令重排（happens-before）， 会引起控制针异常
    volatile+DCL
        解决方法是加volatile： private volatile static DCL instance = null;
    Holder
        在声明类的时侯， 成员变量中不声明实例变量， 而是放到内部静态类中
        结合了饿汉式和懒汉式
    Enum
        常量， 且只实例化一次
内部类具有延迟加载特性